from sklearn import preprocessing
from sklearn.naive_bayes import GaussianNB
le = preprocessing.LabelEncoder()
weather=['Sunny','Sunny','Overcast','Rainy','Rainy','Rainy','Overcast','Sunny','Sunny','Rainy','Sunny','Overcast','Overcast','Rainy']
temp=['Hot','Hot','Hot','Mild','Cool','Cool','Cool','Mild','Cool','Mild','Mild','Mild','Hot','Mild']
play=['No','No','Yes','Yes','Yes','No','Yes','No','Yes','Yes','Yes','Yes','Yes','No']
weather_encoded=le.fit_transform(weather)
temp_encoded=le.fit_transform(temp)
label=le.fit_transform(play)
print("weather:",weather_encoded)
print("Temp:",temp_encoded)
print("Play:",label)
features=list(zip(weather_encoded,temp_encoded))
print("features:",features)
model = GaussianNB()
model.fit(features,label)
predicted= model.predict([[0,2]])
print("Predicted Value for play in Overcast & Mild:", list(le.inverse_transform(predicted))[0])
predicted= model.predict([[2,0]])
print("Predicted Value for play in Sunny & Cool:", list(le.inverse_transform(predicted))[0]) 
predicted= model.predict([[1,1]])
print("Predicted Value for play in Rainy & Hot:", list(le.inverse_transform(predicted))[0]) 
